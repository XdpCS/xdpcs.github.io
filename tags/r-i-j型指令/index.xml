<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>R-I-J型指令 on XdpCs's Website</title><link>https://xdpcs.github.io/tags/r-i-j%E5%9E%8B%E6%8C%87%E4%BB%A4/</link><description>Recent content in R-I-J型指令 on XdpCs's Website</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© Jacy Xu</copyright><lastBuildDate>Sat, 26 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://xdpcs.github.io/tags/r-i-j%E5%9E%8B%E6%8C%87%E4%BB%A4/index.xml" rel="self" type="application/rss+xml"/><item><title>杭电计算机组成实验 实验10-实现R-I-J型指令的CPU设计实验</title><link>https://xdpcs.github.io/posts/hdu_computer_organization_and_architecture_experiment/tenth_experiment/</link><pubDate>Sat, 26 Dec 2020 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/posts/hdu_computer_organization_and_architecture_experiment/tenth_experiment/</guid><description>实验内容 # 掌握MIPS R型、I型和J型指令的综合数据通路设计，掌握各种转移类指令的控制流和指令流的多路选通控制方法 掌握J型、I型和R型转移指令的指令格式和寻址方式，学习转移地址的产生方法，掌握无条件转移指令和条件转移指令的实现方法 编程实现MIPS的部分J型、I型和R型转移指令的功能 解决方法 # 分析MIPS J型指令的特点，由6位OP字段和26位的address字段构成 分析转移指令的数据通路，转移地址的产生有三种方式，转移地址产生后，要送入PC，才能完成跳转 R型指令还添加了一条无条件跳转指令，要在原来的PC模块判断R型指令的地方进行修改，不能在I型指令下判断，这样会产生冲突 对于条件转移指令beq和bne要使用ALU做减法，判断是否全为零，也就是用ZF判断是否转移 J型指令可以接着I型指令的case结构写下来，与J型case结构无冲突 由于实验九和实验十想法十分接近，主要是控制信号的改变，及其译码模块的改变 涉及实验：具体用到的实验是多功能ALU设计实验、寄存器堆设计实验 、取指令与指令译码实验 代码展示 顶层模块</description></item></channel></rss>