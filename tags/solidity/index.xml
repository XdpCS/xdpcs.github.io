<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Solidity on XdpCs's Website</title><link>https://xdpcs.github.io/tags/solidity/</link><description>Recent content in Solidity on XdpCs's Website</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© Alan Xu</copyright><lastBuildDate>Fri, 18 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://xdpcs.github.io/tags/solidity/index.xml" rel="self" type="application/rss+xml"/><item><title>Solidity-Learning</title><link>https://xdpcs.github.io/projects/solidity-learning/</link><pubDate>Fri, 18 Nov 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/projects/solidity-learning/</guid><description/></item><item><title>9-时间单位</title><link>https://xdpcs.github.io/posts/solidity/time/</link><pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/posts/solidity/time/</guid><description>基础知识 # Solidity中自带时间单位，它们分别是 seconds minutes hours days weeks 基本换算关系如下： 1 == 1 seconds 1 minutes == 60 seconds 1 hours == 60 minutes 1 days == 24 hours 1 weeks == 7 days 秒为缺省时间单位 例子 # 例子</description></item><item><title>8-以太币单位</title><link>https://xdpcs.github.io/posts/solidity/ether_and_wei/</link><pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/posts/solidity/ether_and_wei/</guid><description>基础知识 # 以太币单位 单位 Wei Wei值 Wei 1 1 Wei Kwei (babbage) 1,000 1e3 Wei Mwei (lovelace) 1,000,000 1e6 Wei Gwei (shannon) 1,000,000,000 1e9 Wei microether (szabo) 1,000,000,000,000 1e12 Wei milliether (finney) 1,000,000,000,000,000 1e15 Wei ether 1,000,000,000,000,000,000 1e18 Wei 交易需要支付ether 在Solidity中，单位之间的换算是在数字后加上 wei，gwei 或 ether 来实现的 在Solidity中，后面没有单位，缺省为 wei 从Solidity0.</description></item><item><title>7-读取和写入状态变量</title><link>https://xdpcs.github.io/posts/solidity/read_and_write_state/</link><pubDate>Sat, 17 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/posts/solidity/read_and_write_state/</guid><description>基础知识 # 写入和更新状态变量需要发送一笔交易 读取状态变量是免费的，无需任何交易费用 例子 # 例子</description></item><item><title>6-不可变变量</title><link>https://xdpcs.github.io/posts/solidity/immutable/</link><pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/posts/solidity/immutable/</guid><description>基础知识 # 不可变变量就像常量 不可变变量的值可以在构造函数中初始化或在声明时初始化，但初始化后就不能被修改了,这样可以节省gas,提高合约的安全性 数值变量可以声明为immutable string和bytes不可以声明为immutable,这不同于constant 例子 # 例子</description></item><item><title>5-常量</title><link>https://xdpcs.github.io/posts/solidity/constants/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/posts/solidity/constants/</guid><description>基础知识 # 常量是不可修改的变量 它们的值是硬编码的，使用常量可以节省gas成本,还可以提高合约安全性 例子 # 例子</description></item><item><title>4-变量</title><link>https://xdpcs.github.io/posts/solidity/variables/</link><pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/posts/solidity/variables/</guid><description>基础知识 # 在Solidity中有3种类型的变量 局部变量 声明在函数内部 不存储在区块链上 状态变量 声明在函数外部 存储在区块链上 全局变量 提供关于区块链上的信息 可以在函数内不声明直接使用 全局变量列举 blockhash(uint blockNumber) returns (bytes32): 指定区块的哈希值&amp;ndash;仅可用于最新的256个区块且不包括当前区块，否则返回0 block.</description></item><item><title>3-原始数据类型</title><link>https://xdpcs.github.io/posts/solidity/primitives/</link><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/posts/solidity/primitives/</guid><description>基础知识 # 我将介绍四种在Solidity中可用的原始数据类型，它们都是值类型 bool uint、int address bytes(定长数组) 布尔型(bool) 布尔型的取值只有两种：true和false 布尔型的运算符包括： 比较运算符：&amp;gt;，&amp;gt;=，&amp;lt;，&amp;lt;=，==，!</description></item><item><title>2-第一个App</title><link>https://xdpcs.github.io/posts/solidity/first_app/</link><pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/posts/solidity/first_app/</guid><description>这是一个简单的计数器合约,在合约中存储一个数，你可以增加和减少此数</description></item><item><title>1-你好，世界</title><link>https://xdpcs.github.io/posts/solidity/hello_world/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/posts/solidity/hello_world/</guid><description>任何一个程序教学，开头都会教你如何写Hello World，我也不例外</description></item></channel></rss>