<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Solidity on XdpCs's Website</title><link>https://xdpcs.github.io/tags/solidity/</link><description>Recent content in Solidity on XdpCs's Website</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>© Alan Xu</copyright><lastBuildDate>Mon, 19 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://xdpcs.github.io/tags/solidity/index.xml" rel="self" type="application/rss+xml"/><item><title>008-时间单位</title><link>https://xdpcs.github.io/blogs/solidity/008.time_units/</link><pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/blogs/solidity/008.time_units/</guid><description>基础知识 # Solidity中自带时间单位，它们分别是 seconds minutes hours days weeks 基本换算关系如下： 1 == 1 seconds 1 minutes == 60 seconds 1 hours == 60 minutes 1 days == 24 hours 1 weeks == 7 days seconds为缺省时间单位 在Solidity 0.</description></item><item><title>007-以太币单位</title><link>https://xdpcs.github.io/blogs/solidity/007.ether_units/</link><pubDate>Sun, 18 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/blogs/solidity/007.ether_units/</guid><description>基础知识 # 以太币单位 单位 Wei Wei值 Wei 1 1 Wei Kwei (babbage) 1,000 1e3 Wei Mwei (lovelace) 1,000,000 1e6 Wei Gwei (shannon) 1,000,000,000 1e9 Wei Microether (szabo) 1,000,000,000,000 1e12 Wei Milliether (finney) 1,000,000,000,000,000 1e15 Wei Ether 1,000,000,000,000,000,000 1e18 Wei 交易需要支付ether 在Solidity中，单位之间的换算是在数字后边加上wei，gwei 或ether 来实现的 在Solidity中，后面没有单位，缺省为wei 从Solidity 0.</description></item><item><title>006-不可变变量</title><link>https://xdpcs.github.io/blogs/solidity/006.immutable/</link><pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/blogs/solidity/006.immutable/</guid><description>基础知识 # 不可变变量类似于常量，但是少了一些约束 不可变变量的值可以在构造函数中初始化或在声明时初始化，但初始化后就不能被修改了,这样可以节省gas，提高合约的安全性 值类型变量可以声明为immutable 和constant不同，string和bytes不可以声明为immutable， 在Solidity 0.</description></item><item><title>005-常量</title><link>https://xdpcs.github.io/blogs/solidity/005.constants/</link><pubDate>Thu, 15 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/blogs/solidity/005.constants/</guid><description>基础知识 # 常量是不可修改的变量 它们的值是硬编码的，使用常量可以节省gas成本,还可以提高合约安全性 常量必须在声明的时候，进行初始化，之后便不能再改变了，且必须在编译时就确定其值，否则会报错 常量允许使用内置函数keccak256、sha256、ripemd160、ecrecover、addmod 和 mulmod（尽管除了keccak256之外，它们确实调用外部合约） 值类型变量、string和bytes可以声明为constant 例子 #例子</description></item><item><title>004-变量</title><link>https://xdpcs.github.io/blogs/solidity/004.variables/</link><pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/blogs/solidity/004.variables/</guid><description>基础知识 # 在Solidity中有3种类型的变量 局部变量 状态变量 全局变量 局部变量 # 局部变量声明在函数内部 局部变量不存储在区块链上 状态变量 # 状态变量声明在函数外部 状态变量存储在区块链上 全局变量 # 全局变量不需要声明，可以直接使用 全局变量提供了关于区块链上的信息 全局变量列举 blockhash(uint blockNumber) returns (bytes32)：指定区块的哈希值&amp;ndash;仅可用于最新的256个区块且不包括当前区块，否则返回0。 block.</description></item><item><title>003-值类型</title><link>https://xdpcs.github.io/blogs/solidity/003.value_type/</link><pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/blogs/solidity/003.value_type/</guid><description>基础知识 # 我将介绍四种在Solidity中可用的值类型 布尔类型(bool) 整数类型(uint、int) 地址类型(address) 定长数组类型(bytes) 枚举类型(enum) 布尔类型(bool) # 布尔型的取值只有两种：true和 false 布尔型的运算符包括： 比较运算符：&amp;gt;，&amp;gt;=，&amp;lt;，&amp;lt;=，==，!</description></item><item><title>002-第一个App</title><link>https://xdpcs.github.io/blogs/solidity/002.first_app/</link><pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/blogs/solidity/002.first_app/</guid><description>这是一个简单的计数器合约，在合约中存储一个数，你可以增加和减少此数</description></item><item><title>001-你好，世界</title><link>https://xdpcs.github.io/blogs/solidity/001.hello_world/</link><pubDate>Sun, 11 Sep 2022 00:00:00 +0000</pubDate><guid>https://xdpcs.github.io/blogs/solidity/001.hello_world/</guid><description>任何一个程序教学，开头都会教你如何写Hello World，我也不例外</description></item></channel></rss>